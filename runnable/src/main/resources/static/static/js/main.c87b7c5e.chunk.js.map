{"version":3,"sources":["Componenti/GestFid/Services/authService.js","Componenti/GestFid/Login/LoginComponent.jsx","Componenti/GestFid/Logout/LogoutComponent.jsx","Componenti/GestFid/Welcome/Welcome.jsx","Componenti/GestFid/Services/Api/Clienti/ClientiAPI.js","Componenti/GestFid/Errors/HandleError.js","Componenti/GestFid/Clienti/Clienti.jsx","Componenti/GestFid/Login/AlertsExpired.jsx","Componenti/GestFid/AuthRoute.jsx","Componenti/GestFid/Clienti/InsClienti/DatiCliente.jsx","Componenti/GestFid/Header/HeaderComponent.jsx","Componenti/GestFid/Footer/FooterComponent.jsx","Componenti/GestFid/Forbidden/ForbComponent.jsx","Componenti/GestFid/GestFidApp.jsx","App.js","serviceWorker.js","index.js"],"names":["state","Server","createBasicAuthHeader","username","password","window","btoa","createJwtAuthToken","token","authUser","axios","get","BaseURL","headers","authorization","refreshToken","JWTAuthServer","post","saveUserInfo","sessionStorage","setItem","clearUserInfo","removeItem","getUSerInfo","getItem","isLogged","console","log","interceptors","request","use","config","err","Promise","reject","LoginComponent","userId","noLogged","Login","event","preventDefault","AuthenticationService","then","response","data","accessToken","props","history","push","catch","setState","GestMod","target","name","value","id","className","onSubmit","this","src","alt","width","height","htmlFor","type","defaultValue","onChange","required","autoFocus","Component","LogoutComponent","WelcomeComponent","match","params","to","getAllClientiData","getClientiByCode","codfid","delClienteByCode","delete","insCliente","cliente","handleError","obj","error","status","ErrMsg","ErrWebApi","message","Clienti","clienti","CodFid","NumCli","OkMsg","CercaTutti","ClientiService","handleResponse","HandleError","ResetValue","Cerca","Elimina","Modifica","Inserisci","concat","length","DatatablePage","c","buttonDelete","index","onClick","e","confirm","size","buttonEdit","map","cards","nominativo","bollini","ultimaspesa","edit","columns","label","field","sort","rows","style","margin","tag","ErrWebApiMsg","btn","striped","bordered","hover","entriesOptions","entries","display","role","hourSeconds","timerProps","isPlaying","strokeWidth","secondsDim","minutesDim","min","sec","renderTime","dimension","remainingTime","document","getElementById","remove","innerHTML","elements","getElementsByClassName","parentNode","removeChild","removeElementsByClass","AlertsExpired","useState","show","setShow","diff","undefined","time","position","zIndex","top","textAlign","Alert","variant","onClose","click","dismissible","Heading","colors","duration","initialRemainingTime","onComplete","totalElapsedTime","elapsedTime","getTimeMinutes","getTimeSeconds","Button","href","exp","now","AuthRoute","componentDidMount","setVariable","loopIfExpired","Date","jwt","decode","getTime","setInterval","checkIfExpired","Hello","createReactClass","render","temp","createElement","ReactDOM","container","querySelector","appendChild","setupAxiosInterceptors","ruoli","roles","myRole","check","forEach","authority","DatiClienteComponent","indirizzo","comune","cap","prov","telefono","mail","attivo","okMsg","Salva","values","Annulla","Valida","errors","initialValues","enableReinitialize","validate","validateOnChange","validateOnBlur","component","as","HeaderComponent","withRouter","Menu","rel","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Search","placeholder","User","UserInfo","FooterComponent","Footer","ForbComponent","GestFidApp","Admin","path","exact","NotFound","App","Boolean","location","hostname","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c87b7c5e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//Funzionalità varie per quanto riguarda il login, l'autenticazione e la comunicazione con le API riguardanti gli utenti.\r\nclass AuthenticationService {\r\n\r\n    //Servizio per controllare la user e la password nel login\r\n\r\n    state = {\r\n        Server: \"http://localhost:8080\"\r\n    }\r\n\r\n    createBasicAuthHeader = (username,password) => 'Basic ' + window.btoa(username + \":\" + password);\r\n\r\n    createJwtAuthToken = (token) => 'Bearer ' + token;\r\n\r\n    authUser = (username, password) => {\r\n        return axios.get(`${this.state.Server}${this.state.BaseURL}/auth`,\r\n            {\r\n                headers: {authorization: this.createBasicAuthHeader(username,password)}\r\n            }\r\n        );\r\n    }\r\n\r\n    refreshToken = () => {\r\n        return axios.get(`${this.state.Server}/api/auth/refresh-token`);\r\n    }\r\n\r\n    //Con l'autenticazione JWT i parametri non vengono passati con un header ma attraverso il body\r\n    JWTAuthServer = (username,password) => {\r\n        return axios.post(`${this.state.Server}/api/auth/signin`,\r\n            {\r\n                username,\r\n                password\r\n            }\r\n        );\r\n    }\r\n\r\n    saveUserInfo = (username,token) => {\r\n        sessionStorage.setItem(\"user\", username);\r\n        sessionStorage.setItem(\"token\", token);\r\n\r\n        //Qui non serve più. è stato spostato nell'AuthRoute.jsx\r\n        //Dico all'intercettore quando deve essere utilizzato\r\n        //this.setupAxiosInterceptors(this.createJwtAuthToken(token));\r\n\r\n    }\r\n\r\n    clearUserInfo = () => {\r\n        sessionStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"token\");\r\n    }\r\n\r\n    getUSerInfo = () => sessionStorage.getItem(\"user\");\r\n\r\n    isLogged = () => {\r\n\r\n        let user = this.getUSerInfo();\r\n\r\n        if (user === null)\r\n            return false;\r\n        else\r\n            return true;\r\n\r\n    }\r\n\r\n    //Questo è un Intercettore (Interceptors).\r\n    //Servono per svolgere un operazione prima che si invia una richiesta alle webapi\r\n    setupAxiosInterceptors(token){\r\n\r\n        console.log(\"Intercettore token Service: \" + token);\r\n\r\n        //Questo è il metodo per usare l'intercettore.\r\n        axios.interceptors.request.use(\r\n            //Creo una nuova configurazione\r\n            (config) => {\r\n                if(this.isLogged()){\r\n                    config.headers.authorization = token\r\n                }\r\n                return config;\r\n            },\r\n\t\t\t(err) => {\r\n\t\t\t\treturn Promise.reject(err);\r\n\t\t\t}\r\n        )\r\n\r\n        //In saveUserInfo() dico all'intercettore quando dovrà essere utilizzato\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService();","import React, { Component } from \"react\";\r\nimport \"./LoginComponent.css\";\r\nimport AuthenticationService from '../Services/authService.js';\r\n\r\n//Classe per la pagina di login\r\nexport default class LoginComponent extends Component {\r\n\r\n    state = {\r\n        userId: 'Roberto',\r\n        password: '123Stella',\r\n        isLogged: false,\r\n        noLogged: false\r\n    }\r\n\r\n    //Form di login\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <p>Accedi all'App GestFid</p>\r\n                <section id=\"logInSection\">\r\n                    <form className=\"form-signin\" onSubmit={this.Login}>\r\n                        <img className=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\r\n                        <label htmlFor=\"userId\" className=\"sr-only\">Email address</label>\r\n                        <input type=\"text\" id=\"userId\" name=\"userId\" className=\"form-control\" defaultValue={this.state.userId} onChange={this.GestMod} required autoFocus />\r\n\r\n                        <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" defaultValue={this.state.password} onChange={this.GestMod} required />\r\n\r\n                        <div className=\"checkbox mb-3\">\r\n                            <label>\r\n                                <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Accedi</button>\r\n                        <p className=\"mt-5 mb-3 text-muted\">&copy; 2017-2018</p>\r\n                    </form>\r\n                </section>                \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    //Metodo per il login.\r\n    Login = (event) => {\r\n        event.preventDefault(); //Importante percè essendo il login una form, evita che premendo invio la pagina si refreshi.\r\n\r\n        //Chiamo la funzione che contatta l'api backend per il login e la generazione del token JWT\r\n        AuthenticationService.JWTAuthServer(this.state.userId,this.state.password)\r\n        .then((response) => {\r\n            AuthenticationService.saveUserInfo(this.state.userId,response.data.accessToken); //Salvo le info in sessione\r\n            this.props.history.push(`/welcome/${this.state.userId}`); //Reindirizzo nella pagina di welcome\r\n        })\r\n        .catch(() => {\r\n            //Resetto le variabili dello state se trovo un problema\r\n            this.setState({\r\n                isLogged: false,\r\n                noLogged: true  \r\n            })\r\n        })\r\n    }\r\n\r\n    //Metodo che aggiorna le variabili dello state quando vengono modificati i dati all'interno della form\r\n    GestMod = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport \"./LogoutComponent.css\";\r\n\r\n//Classe per la funzionalità di logout\r\nexport default class LogoutComponent extends Component {\r\n    render() {\r\n        this.clearUserInfo();\r\n        this.props.history.push(`/login`); //Reindirizzo nella pagina di login\r\n        return null;\r\n    }\r\n\r\n    clearUserInfo = () => {\r\n        sessionStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"token\");\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Welcome.css\";\r\n\r\n//Classe per la pagina di benvenuto dell'utente subito dopo il login\r\nexport default class WelcomeComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"GestFidApp\">\r\n                <section id=\"welcomeSection\">\r\n                    <h1>Benvenuti in GestFid</h1>\r\n                    <p>Saluti <b>{this.props.match.params.userId}</b></p>\r\n                    <Link to=\"/clienti\" type=\"button\" className=\"btn btn-primary\" >Vai ai clienti disponibili</Link>\r\n                </section>                \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}","import axios from \"axios\";\r\n\r\n//Metodi per comunicare con le API backend relative ai clienti.\r\nclass ClientiService {\r\n\r\n    state = {\r\n        Server: \"http://localhost:8080\",\r\n        BaseURL: \"/api/clienti\"\r\n    }\r\n\r\n    getAllClientiData = () => {\r\n        return axios.get(`${this.state.Server}${this.state.BaseURL}/cerca/all`);\r\n    }\r\n\r\n    getClientiByCode = (codfid) => {\r\n        return axios.get(`${this.state.Server}${this.state.BaseURL}/cerca/codice/${codfid}`);\r\n    }\r\n\r\n    delClienteByCode = (codfid) => {\r\n        return axios.delete(`${this.state.Server}${this.state.BaseURL}/elimina/codfid/${codfid}`);\r\n    }\r\n\r\n    insCliente = (cliente) => {\r\n        return axios.post(`${this.state.Server}${this.state.BaseURL}/inserisci`, cliente);\r\n    }\r\n\r\n}\r\n\r\nexport default new ClientiService();","//File per la gestione di alcuni errori\r\n\r\n//Classe per ritornare un messaggio di errore personalizzato in base al codice dell'errore.\r\nclass HandleError {\r\n\r\n    handleError = (obj, error) => {\r\n        \r\n        if (error.response.status === 403) {\r\n            obj.setState({\r\n                ErrMsg: \"Non hai il permesso di eseguire questa funzionaltà\",\r\n                ErrWebApi: true\r\n            })\r\n        } else {\r\n            obj.setState({\r\n                ErrMsg: error.response.data.message,\r\n                ErrWebApi: true\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new HandleError();","import React, { Component } from \"react\";\r\nimport './Clienti.css';\r\nimport ClientiService from \"../Services/Api/Clienti/ClientiAPI.js\"\r\nimport AuthenticationService from '../Services/authService.js';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn } from 'mdbreact';\r\nimport HandleError from \"../Errors/HandleError.js\"\r\nimport jwt from \"jsonwebtoken\"\r\n\r\n\r\n//Classe principale per la gestione dei clienti\r\nexport default class Clienti extends Component {\r\n\r\n    state = {\r\n        clienti: [],\r\n        CodFid: \"\",\r\n        ErrWebApi: false,\r\n        ErrMsg: \"\",\r\n        NumCli: 0,\r\n        OkMsg: null\r\n    }\r\n\r\n    //Metodo ideale per eseguire le operazioni di interfacciamento con i webservices all'avvio della scehrmata\r\n    componentDidMount() {\r\n        //Appena caricata la classe, cerco tutti i clienti presenti nel DB\r\n        this.CercaTutti();\r\n    }\r\n\r\n    //Metodo per cercare tutti i cleitni nel DB richiamanto il metodo che contatta l'API\r\n    CercaTutti = () => {\r\n        ClientiService.getAllClientiData()\r\n            .then(response => this.handleResponse(response))\r\n            .catch(error => HandleError.handleError(this, error))\r\n    }\r\n\r\n    //Metodo per resettare tutti i valori dello state\r\n    ResetValue = () => {\r\n        this.setState({ clienti: [], ErrWebApi: false, ErrMsg: \"\", NumCli: 0 });\r\n    }\r\n\r\n    //Metodo per cercare un cliente in base al suo ID\r\n    Cerca = () => {\r\n\r\n        this.ResetValue();\r\n\r\n        //Se non viene passato nessun ID allora ritorno tutti i cleinti.\r\n        if (this.state.CodFid === \"\") {\r\n            ClientiService.getAllClientiData()\r\n                .then(response => this.handleResponse(response))\r\n                .catch(error => HandleError.handleError(this, error))\r\n        } else {\r\n            ClientiService.getClientiByCode(this.state.CodFid)\r\n                .then(response => this.handleResponse(response))\r\n                .catch(error => HandleError.handleError(this, error))\r\n        }\r\n    }\r\n\r\n    //MEtodo per eliminare un cliente in base al suo ID\r\n    Elimina = (codfid) => {\r\n\r\n        ClientiService.delClienteByCode(codfid)\r\n            .then(() => {\r\n                this.setState({ OkMsg: `Eliminazione cliente ${codfid} eseguita con successo!` })\r\n                this.ResetValue();\r\n                this.CercaTutti();\r\n            })\r\n            .catch(error => HandleError.handleError(this, error))\r\n    }\r\n\r\n    //Metodo per visualizzare la form di modifica di un partiolare cliente in base all'ID. Se l'Id è -1 si intende un nuovo cliente (Form vuota).\r\n    Modifica = (codfid) => {\r\n        this.props.history.push(`/inscliente/${codfid}`);\r\n    }\r\n\r\n    //Metodo per inserire un nuovo cliente. Uguale a Modifica() ma viene passato -1 come parametro\r\n    Inserisci = () => {\r\n        console.log(\"Premuto il tasto Inserimento!\");\r\n\r\n        this.props.history.push(`/inscliente/-1`);\r\n    }\r\n\r\n\r\n    //Metodo per gestire le risposte positive dei metodi.\r\n    //Le risposte negative vengono gestite da handleError.js nella cartella Errors\r\n    handleResponse = (response) => {\r\n\r\n        this.setState({\r\n            clienti: this.state.clienti.concat(response.data)\r\n        })\r\n\r\n        //Questo secondo set state serve perchè se metto tutto in uno, il valore non si aggiorna perchè clienti non è ancora settato. Normale andamento del thread.\r\n        this.setState({\r\n            NumCli: this.state.clienti.length\r\n        })\r\n\r\n    }\r\n\r\n    //Ritorno la pagina visualizzata\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section id=\"clientiSection\">\r\n                    <h3>Clienti Disponibili: {this.state.NumCli}</h3>\r\n\r\n                    <div>\r\n                        <button style={{ display: \"inline-block\" }} type=\"button\" className=\"btn btn-primary\" onClick={this.Cerca}><i className=\"fa fa-search\"></i></button>\r\n                        <div style={{ display: \"inline-block\" }} className=\"filter-group\">\r\n                            <label>Fltro: </label>\r\n                            <input name=\"CodFid\" type=\"text\" className=\"form-control\" value={this.state.CodFid} onChange={this.GestMod} />\r\n                        </div>\r\n                    </div>\r\n                    {this.DatatablePage()}\r\n                </section>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    //Metodo che aggiorna le variabili dello state quando vengono modificati i dati all'interno della form\r\n    GestMod = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    //Metodo per la generazione dinamica della DataTable. Uso mdbreact.\r\n    DatatablePage = () => {\r\n\r\n        //Array di lavoro\r\n        var c = [];\r\n\r\n        //Bottoni di modifica e eliminazione di un cliente. Index è il codfid.\r\n        const buttonDelete = (index) => { return <button id={\"delete-\" + index} onClick={e => window.confirm(`Confermi l'eliminazione del cliente ${index}?`) && this.Elimina(index)} type=\"button\" className=\"btn btn-danger rounded\" size=\"sm\">Elimina</button> }\r\n        const buttonEdit = (index) => { return <button id={\"edit-\" + index} onClick={() => this.Modifica(index)} type=\"button\" className=\"btn btn-warning rounded\" size=\"sm\">Modifica</button> }\r\n\r\n        //Aggiungo a c tutti i clienti\r\n        this.state.clienti.map((cliente, index) => {\r\n            cliente.cards != null\r\n                ? c[index] = { codfid: cliente.codfid, nominativo: cliente.nominativo, bollini: cliente.cards.bollini, data: cliente.cards.ultimaspesa, edit: buttonEdit(cliente.codfid), delete: buttonDelete(cliente.codfid) }\r\n                : c[index] = { codfid: cliente.codfid, nominativo: cliente.nominativo, bollini: 0, data: \"Sconosciuta\", edit: buttonEdit(cliente.codfid), delete: buttonDelete(cliente.codfid) }\r\n        })\r\n\r\n        //Dati della DataTable. Colonne statiche e Righe dinamiche\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'CodFid',\r\n                    field: 'codfid',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'nominativo',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'Bollini',\r\n                    field: 'bollini',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Data',\r\n                    field: 'data',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Modifica',\r\n                    field: 'edit',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    field: 'delete',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                }\r\n            ],\r\n            rows: c\r\n        };\r\n\r\n        //Renderizzo la DataTable\r\n        return (\r\n            <MDBCard style={{ width: \"90%\", margin: \"2rem auto\", \"maxWidth\": \"90vw\" }}>\r\n                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\r\n                    Table Editable\r\n                    <br /><button onClick={this.Inserisci} type=\"button\" className=\"btn btn-info rounded\"><i className=\"fa fa-plus\"></i> Aggiungi nuovo cliente</button>\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                    \r\n                    {/* Sezione Avvisi */}\r\n                    {/*Significa che se OkMsg non è null appare l'alert altrimenti nulla.*/}\r\n                    {this.state.OkMsg && <div className=\"alert alert-success\">{this.state.OkMsg}</div>}\r\n                    <ErrWebApiMsg ErrWebApi={this.state.ErrWebApi} ErrMsg={this.state.ErrMsg} obj={this}/>\r\n\r\n                    {/* Tabella */}\r\n                    <MDBDataTable btn striped bordered hover entriesOptions={[5, 20, 25]} entries={5} data={data} />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction ErrWebApiMsg(props) {\r\n    if (props.ErrWebApi) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\"><h3>{props.ErrMsg}</h3></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}","import React, { Component, useState } from \"react\";\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport AuthenticationService from \"../Services/authService.js\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport \"./LoginComponent.css\";\r\n\r\n\r\n/*\r\n* File chiamato da AuthRoute, utilizzato per visualizzare una finestra di alert con l'avviso che il token è prossimo alla scdenza con la possibilità\r\n* di rinnovare il token o di ritornare al login. Vengono visualizzati anche i coundown dei minuti e dei secondi del tempo rimanente. Di default 15 minuti.\r\n*/\r\n\r\n//Costanti utilizzate nelle diverse funzionalità.\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst timerProps = {\r\n\tisPlaying: true,\r\n\tsize: 160,\r\n\tstrokeWidth: 6\r\n};\r\nconst secondsDim = \"Secondi\";\r\nconst minutesDim = \"Minuti\";\r\nconst getTimeSeconds = time => (minuteSeconds - time) | 0;\r\nconst getTimeMinutes = time => ((time % hourSeconds) / minuteSeconds) | 0;\r\n\r\n//Variabili utilizzate per capire se il tempo è finito o no.\r\nlet min = true;\r\nlet sec = true;\r\n\r\n\r\n\r\n//Funzionalità principale di questo file. Visualizzo la tabella di alert con i countdown di minuti e secondi alla scadenza.\r\nconst AlertsExpired = (props) => {\r\n\r\n\t//Devo inizializzare queste variabili qui altrimenti senza aggiornare la pagina il valore non verrebbe resettato.\r\n\tmin = true;\r\n\tsec = true;\r\n\t\r\n\t//Variabile show e metodo setShow per capire se visualizzare o meno la finestra di alert\r\n\tconst [show, setShow] = useState(props.show);\r\n\t\r\n\t//Variabile diff è il tempo in timestamp unix che manca alla scadenza del token\r\n\tlet diff = 0;\r\n\tif(props.diff !== undefined || props.diff < 0){\r\n\t\tdiff = props.diff;\r\n\t}\r\n\r\n\t//Varibile time viene inizializzata come diff per sicurezza ma se la proprieta esiste gli viene assegnata la sua proprietà che indica il tempo iniziale di scandenza del token\r\n\tlet time = diff;\r\n\tif(props.time !== undefined || props.time < 0){\r\n\t\ttime = props.time;\r\n\t}\r\n    \r\n    if (show) {\r\n        return (\r\n\t\t\t<>\r\n\t\t\t<div id=\"alertExp\" style={{position: \"fixed\",zIndex: \"1\",width: \"100%\",top: \"4rem\",textAlign: \"center\"}}>\r\n\r\n\t\t\t<Alert variant=\"danger\" onClose={click} dismissible>\r\n\t\t\t\t<Alert.Heading>ATTENZIONE!</Alert.Heading>  \r\n\t\t\t\t\t<p id=\"alertText\">Il tuo token sta per scaddere, lo vuoi aggiornare?</p>                  \r\n\t\t\t\t\t<div className=\"timer-wrapper\">\t\t\t\t\t\t\r\n\t\t\t\t\t\t<CountdownCircleTimer\r\n\t\t\t\t\t\t\t{...timerProps}\r\n\t\t\t\t\t\t\tcolors={[[\"#EF798A\"]]}\r\n\t\t\t\t\t\t\tduration={hourSeconds}\r\n\t\t\t\t\t\t\tinitialRemainingTime={(diff/1000) % hourSeconds}\r\n\t\t\t\t\t\t\tonComplete={totalElapsedTime => [\r\n\t\t\t\t\t\t\t(diff/1000) - totalElapsedTime > minuteSeconds\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ elapsedTime }) =>\t\t\t\t\t\r\n\t\t\t\t\t\t\t\trenderTime(minutesDim,\tgetTimeMinutes(hourSeconds - elapsedTime))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</CountdownCircleTimer>\r\n\t\t\t\t\t\t<CountdownCircleTimer\r\n\t\t\t\t\t\t\t{...timerProps}\r\n\t\t\t\t\t\t\tcolors={[[\"#218380\"]]}\r\n\t\t\t\t\t\t\tduration={minuteSeconds}\r\n\t\t\t\t\t\t\tinitialRemainingTime={(diff/1000) % minuteSeconds}\r\n\t\t\t\t\t\t\tonComplete={totalElapsedTime => [(diff/1000) - totalElapsedTime > 0]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ elapsedTime }) =>\r\n\t\t\t\t\t\t\t\trenderTime(secondsDim, getTimeSeconds(elapsedTime))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</CountdownCircleTimer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button id=\"RefreshToken\" onClick={refresh} className=\"btn btn-warning rounded\">Refresh Token</Button>\r\n\t\t\t\t<a href=\"/login\" type=\"button\" className=\"btn btn-info rounded\">LOGIN</a>\r\n\t\t\t</Alert>\r\n\t\t\t</div>\r\n\t\t</>\r\n        )\r\n    }else{\r\n\t\treturn null;\r\n    }\r\n\r\n\t//Funzione per chiudere la tabella di alert\r\n    function click(){\r\n        setShow(false);\r\n    }\r\n\r\n\t//Funzione per aggiornare il token. Unica Copia quindi importante non perderla.\r\n    function refresh() {\r\n        click();\r\n        return(\r\n\t\tAuthenticationService.refreshToken()\r\n\t\t\t.then(response => {\r\n\t\t\t\tsessionStorage.setItem(\"token\", response.data.accessToken);\r\n\t\t\t})\r\n            .catch(error => console.log(error))\r\n        );        \r\n\t}  \t\r\n}\r\n\r\n//Funzione per eliminare tutti gli elementi del dom con una specifica classe\r\nfunction removeElementsByClass(className){\r\n\tvar elements = document.getElementsByClassName(className);\r\n\twhile(elements.length > 0){\r\n\t\telements[0].parentNode.removeChild(elements[0]);\r\n\t}\r\n}\r\n\r\n//Funzionalità per renderizzare il tempo mancante nei due countdown.\r\nconst renderTime = ( dimension, remainingTime ) => {\r\n\r\n\t//Imposto le variabili sec e min a false se il corrispondente tempo si è esaurito\r\n\tif(dimension === secondsDim){\r\n\t\tif(remainingTime === 0){\r\n\t\t\tsec = false;\r\n\t\t}\r\n\t}else if(dimension === minutesDim){\r\n\t\tif(remainingTime === 0){\r\n\t\t\tmin = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//Se il tempo è finito aggiorno i valori della finestra di alert.\r\n\tif (!min && !sec) {\r\n\t\tif(document.getElementById(\"RefreshToken\") !== null)\r\n\t\t\tdocument.getElementById(\"RefreshToken\").remove();\r\n\t\tif(document.getElementById(\"alertText\") !== null)\r\n\t\t\tdocument.getElementById(\"alertText\").innerHTML = \"Il tuo token è scaduto rifai il login per continuare.\";\r\n\t\tremoveElementsByClass(\"timer-wrapper\");\r\n\t  return <div className=\"timer\">Troppo tardi...</div>;\r\n\t}\r\n  \r\n\t//Se il tempo non è finito, ritorno il valore aggiornato del tempo rimanente.\r\n\treturn (\r\n\t  <div className=\"timer\">\r\n\t\t<div className=\"text\">Rimangono</div>\r\n\t\t<div className=\"value\">{remainingTime}</div>\r\n\t\t<div className=\"text\">{dimension}</div>\r\n\t  </div>\r\n\t);\r\n  };\r\n\r\nexport default AlertsExpired;","import React, { Component, useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport createReactClass from \"create-react-class\";\r\nimport AuthenticationService from \"./Services/authService.js\";\r\nimport { Redirect, Route, Link } from \"react-router-dom\"\r\nimport jwt from \"jsonwebtoken\"\r\nimport axios from 'axios'\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport AlertsExpired from \"./Login/AlertsExpired\"\r\n\r\n//Tempo che si vuole lasciare all'utente per rinnovare il token\r\nconst time = 15 * 60 * 1000;\r\n\r\n//Inizializzo variabili globali di questo file\r\nlet token = null;\r\nlet exp = null;\r\nlet now = null;\r\n\r\n//Questa classe viene utilizzata nel ROUTING alle diverse pagine dell'app. Viene quindi chiamata quando si vuole aprire tutte le pagine che sono indirizzate tramite questa classe.\r\n//Visualizzi il suo utilizzo in GestFid.jsx\r\nexport default class AuthRoute extends Component {\r\n\r\n\t//Il costruttore viene eseguito al primo utilizzo della classe e avvia l'intercettore.\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setupAxiosInterceptors();\r\n\t}\r\n\r\n\t//Metodo eseguito ogni volta alla fine del caricamento della classe.\r\n\t//Imposto correttamente le variabili globali e poi avvio il metodo loopIfExpired.\r\n\tcomponentDidMount = () => {\r\n\t\ttry {\r\n\t\t\tthis.setVariable();\r\n\t\t\tthis.loopIfExpired();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\t//Metyodo per impostare correttamente le variabili globali con i valori più recenti.\r\n\tsetVariable = () => {\r\n\t\t//Essendo che questo metodo viene chiamato anche nel componentDidMount, il quale è il primo metodo che parte, bisogna controllare che il token non sia null.\r\n\t\t//Il controllo principale viene comunque fatto nel metodo render.\r\n\t\tif(sessionStorage.getItem('token') != null){\r\n\t\t\ttoken = sessionStorage.getItem('token');\r\n\t\t\texp = new Date(jwt.decode(token).exp*1000).getTime(); //.getTime mi fornisce il valore timestamp unix di una data.\r\n\t\t\tnow = new Date().getTime();\r\n\t\t}\r\n\t}\r\n\r\n\t//Questo metodo serve per controllare automaticamente ogni periodo di tempo uguale alla costante globale time se il token è prossimo alla scadenza.\r\n\t//Se lo è, visualizzo una finestra di alert (AlertsExpired.jsx) con la possibilità di aggiornare il token o di tornare al login con anche il countdown.\r\n\tloopIfExpired = () => {\r\n\r\n\t\tsetInterval(() => {\r\n\r\n\t\t\t//Aggiorno le varibili globali essendo dentro ad una funzione ricorsiva.\r\n\t\t\tthis.setVariable();\r\n\r\n\t\t\t//Controllo se il token è prossimo alla scadenza\r\n\t\t\tif (this.checkIfExpired()) {\r\n\r\n\t\t\t//Aggiungo al body la finestra di alert\r\n\t\t\t\tvar Hello = createReactClass({\r\n\t\t\t\t\trender: function () {\r\n\t\t\t\t\t\treturn <AlertsExpired obj={this} show={true} diff={(exp-now)} time={time}/>;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tvar temp = document.createElement(\"div\");\r\n\t\t\t\t// render\r\n\t\t\t\tReactDOM.render(<Hello />, temp);\r\n\t\t\t\tvar container = document.querySelector(\"body\");\r\n\t\t\t\tif(container.querySelector(\"#alertExp\") === null || container.querySelector(\"#alertExp\") === undefined){\r\n\t\t\t\t\tcontainer.appendChild(temp, document.querySelector(\"body\"));\r\n\t\t\t\t}\r\n\t\t\t//Fine di aggiunta al body della finestra di alert\r\n\r\n\t\t\t}\r\n\t\t\t//In ogni caso richiamo la funzione che aspetterà time tempo prima di eseguirsi nuovamente.\r\n\t\t\tthis.loopIfExpired();\r\n\t\t}, time);\r\n\t}\r\n\r\n\t//Metodo per controlalre se il token è prossimo alla scadenza secondo la costante globale time\r\n\tcheckIfExpired = () => {\r\n\t\tif (sessionStorage.getItem('token') !== null) {\r\n\t\t\t\r\n\t\t\t//Se la data exp è nel futuro rispetto ad adesso e se exp meno now è minore o uguale al periodo di allerta (time = 15 minuti) ritorno true\r\n\t\t\tif (now < exp && (exp-now) <= time) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (new Date() > exp) {//Se il token è già scaduto ritorno null\r\n\t\t\t\treturn null;\r\n\t\t\t} else { //Se il token non è ne già scaduto ne è prossimo alla scadenza ritorno false\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t\tconsole.log(\"TOKEN IS NULL\");\r\n\t\treturn null; //Se il token non viene trovato ritorno null\r\n\t}\r\n\r\n\t//Questo è un Intercettore (Interceptors).\r\n\t//Servono per svolgere un operazione prima che si invia una richiesta alle webapi\r\n\tsetupAxiosInterceptors() {\r\n\t\tlet token = 'Bearer ' + sessionStorage.getItem('token');\r\n\t\t//Questo è il metodo per usare l'intercettore.\r\n\t\taxios.interceptors.request.use(\r\n\t\t\t//Creo una nuova configurazione\r\n\t\t\t(config) => {\r\n\r\n\t\t\t\t//Devo aggiornare la variabile token anche qui altrimenti ritorna valori non aggiornati se non si aggiorna la pagina.\r\n\t\t\t\ttoken = 'Bearer ' + sessionStorage.getItem('token');\r\n\t\t\t\tif (AuthenticationService.isLogged()) {\r\n\t\t\t\t\tconfig.headers.authorization = token\r\n\t\t\t\t}\r\n\t\t\t\treturn config;\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\treturn Promise.reject(err);\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\t//Mi ricavo i ruoli dell'utente loggato\r\n\t\tlet ruoli = \"\";\r\n\t\tif (sessionStorage.getItem('token') !== null)\r\n\t\t\truoli = jwt.decode(sessionStorage.getItem('token')).roles;\r\n\r\n\t\t//Aggiorno le variabili globali\r\n\t\tthis.setVariable();\r\n\r\n\t\t//Controllo che l'utente sia loggato e che iltoken non sia già scaduto. Altrimenti reindirizzo alla pagina di login\r\n\t\tif (AuthenticationService.isLogged() && this.checkIfExpired() !== null) {\r\n\r\n\t\t\t//myRole è in realtà il ruolo che è necessario avere per poter accedere ad una determinata pagina e viene passato nelle props in GestFid.jsx\r\n\t\t\tlet myRole = this.props.role;\r\n\r\n\t\t\t//Variabile di controllo per verificare che l'utnete abbia il ruolo necessario\r\n\t\t\tlet check = false;\r\n\r\n\t\t\t//Verifico che l'utente abbia il ruolo necessario\r\n\t\t\truoli.forEach(e => {\r\n\t\t\t\tif (e.authority !== null && e.authority === myRole) {\r\n\t\t\t\t\tcheck = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\t//Se l'utente non ha il ruolo necessario ad accedere alla pagina lo rimando alla pagina forbidden\r\n\t\t\tif (check) {\t\t\t\t\r\n\r\n\t\t\t\t//Se il token sta per scadere visualizzo la finestra di alert e renderizzo la pagina richiesta.\r\n\t\t\t\tif (this.checkIfExpired()) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<AlertsExpired obj={this} show={true} diff={(exp-now)} time={time}/>\r\n\t\t\t\t\t\t\t<Route {...this.props}></Route>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t} else { //Altrimenti renderizzo solamente la pagina richiesta\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Route {...this.props}></Route>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn <Redirect to=\"/forbidden\" />\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\treturn <Redirect to=\"/login\" />\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import React, { Component } from \"react\";\r\nimport './DatiCliente.css';\r\nimport { Formik, FormikProps, Form, Field, ErrorMessage } from 'formik';\r\nimport ClientiService from '../../Services/Api/Clienti/ClientiAPI.js';\r\nimport HandleError from \"../../Errors/HandleError.js\"\r\nimport AuthRoute from \"../../AuthRoute\"\r\n\r\n\r\n//Classe per la tabella di modifica di un cliente e di inserimento di nuovi clienti. \r\nexport default class DatiClienteComponent extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        codfid: '',\r\n        nominativo: '',\r\n        indirizzo: '',\r\n        comune: '',\r\n        cap: '',\r\n        prov: '',\r\n        telefono: '',\r\n        mail: '',\r\n        attivo: true,\r\n        cards: {\r\n            \"bollini\": 0,\r\n            \"ultimaspesa\": \"2020-01-01\"\r\n        },\r\n        okMsg: null,\r\n        ErrMsg: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //Controllo se la props codfid indica un particolare cliente o l'inserimento di uno nuovo (-1)\r\n        let CodFid = this.props.match.params.codfid;\r\n\r\n        if (CodFid != \"-1\") {\r\n            ClientiService.getClientiByCode(CodFid)\r\n                .then(response => this.handleResponse(response))\r\n                .catch(error => HandleError.handleError(this, error))\r\n        }\r\n    }\r\n\r\n    //Gestisco le risposte positive.\r\n    //Le risposte negative vengono gestite da handleError.js nella cartella Errors\r\n    handleResponse(response) {\r\n\r\n        this.setState({\r\n            id: response.data.id,\r\n            codfid: response.data.codfid,\r\n            nominativo: response.data.nominativo,\r\n            indirizzo: response.data.indirizzo,\r\n            comune: response.data.comune,\r\n            cap: response.data.cap,\r\n            prov: response.data.prov,\r\n            telefono: response.data.telefono,\r\n            mail: response.data.mail,\r\n            attivo: response.data.attivo,\r\n            cards: response.data.cards,\r\n            okMsg: null\r\n        })\r\n\r\n    }\r\n\r\n    //Metodo per salvare il nuovo o aggiornare uno esistente\r\n    Salva = (values) => {\r\n\r\n        ClientiService.insCliente({\r\n            id: values.id,\r\n            codfid: values.codfid,\r\n            nominativo: values.nominativo,\r\n            indirizzo: values.indirizzo,\r\n            comune: values.comune,\r\n            cap: values.cap,\r\n            prov: values.prov,\r\n            telefono: values.telefono,\r\n            mail: values.mail,\r\n            attivo: values.attivo,\r\n            cards: values.cards,\r\n        })\r\n            .then(\r\n                () => {\r\n                    this.setState({ okMsg: 'Inserimento dati eseguito con successo' });\r\n                }\r\n            )\r\n            .catch(error => HandleError.handleError(this, error));\r\n    }\r\n\r\n    //Metodo per annullare le modifiche e ritornare a tutti i clienti\r\n    Annulla = () => {\r\n        if (window.confirm(\"Abbandoni le modifiche?\")) {\r\n            this.props.history.push(`/clienti`);\r\n        }\r\n    }\r\n\r\n    //Metodo per validare i dati inseriti nella FORM\r\n    Valida = (values) => {\r\n        let errors = {}\r\n\r\n        if (!values.codfid) {\r\n            errors.codfid = \"Inserisci il codice fidelity del cliente\"\r\n        }\r\n        else if (values.codfid.length !== 8) {\r\n            errors.codfid = \"Il codice fidelity deve avere 8 caratteri\"\r\n        }\r\n\r\n        if (!values.nominativo) {\r\n            errors.nominativo = \"Inserisci il nome del cliente\"\r\n        }\r\n        else if (values.nominativo.length < 6) {\r\n            errors.nominativo = \"Il nome deve avere almeno 6 caratteri\"\r\n        }\r\n\r\n        if (!values.indirizzo) {\r\n            errors.indirizzo = \"Inserisci il indirizzo del cliente\"\r\n        }\r\n\r\n        if (!values.comune) {\r\n            errors.comune = \"Inserisci il comune del cliente\"\r\n        }\r\n\r\n        if (!values.telefono) {\r\n            errors.telefono = \"Inserisci il telefono del cliente\"\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n\r\n        //Imposto il valore dei campi della form con quelli salvati nello state. ATTENZIONE, questi nomi devo essere uguali a quelli dello state.\r\n        let { id, codfid, nominativo, indirizzo, comune, cap, prov, telefono, mail, attivo, cards } = this.state;\r\n\r\n        return (\r\n            <section className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title mb-4\">Dati Cliente Fidelity</h3>\r\n\r\n                        <Formik\r\n                            //Inizio della FORM. Per crearla utilizzo FORMIK\r\n                            //Imposto i valori iniziali. ATTENZIONE, questi nomi devono essere uguali a quelli dell'id dei campi della form\r\n                            initialValues={{ id, codfid, nominativo, indirizzo, comune, cap, prov, telefono, mail, attivo, cards }}\r\n\r\n                            //Nel submit della FORM chiamo il metodo salva\r\n                            onSubmit={this.Salva}\r\n\r\n                            //Con questa proprietà i parametri vengono inizializzati all'avvio\r\n                            enableReinitialize={true}\r\n\r\n                            //Valido i valori\r\n                            validate={this.Valida}\r\n\r\n                            //Con queste due proprietà, la form verrà validata solamente quando si preme il tasto salva, altrimenti verrebbe validata fin da subito\r\n                            validateOnChange={false}\r\n                            validateOnBlur={false}\r\n                        >\r\n\r\n                            {\r\n\r\n                                (props) => (\r\n\r\n                                    <Form>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <img style={{ width: \"100px\", \"marginBottom\": \"2rem\" }} src={`../logo.png`} className=\"img-sm rounded-circle border\" alt=\"imgcli\" />\r\n                                        </div>\r\n\r\n                                        {this.state.okMsg && <div className=\"alert alert-success\"><h5>{this.state.okMsg}</h5></div>}\r\n                                        {this.state.ErrMsg && <div className=\"alert alert-danger\"><h5>{this.state.ErrMsg}</h5></div>}\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Codice Fidelity *</label>\r\n                                                <Field type=\"text\" name=\"codfid\" className=\"form-control\" />\r\n                                                <ErrorMessage name=\"codfid\" component=\"span\" className=\"errmsg\" />\r\n                                            </div>\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Nominativo *</label>\r\n                                                <Field type=\"text\" name=\"nominativo\" className=\"form-control\" />\r\n                                                <ErrorMessage name=\"nominativo\" component=\"span\" className=\"errmsg\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Indirizzo</label>\r\n                                                <Field type=\"text\" name=\"indirizzo\" className=\"form-control\" />\r\n                                                <ErrorMessage name=\"indirizzo\" component=\"span\" className=\"errmsg\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Comune</label>\r\n                                                <Field type=\"text\" name=\"comune\" className=\"form-control\" />\r\n                                                <ErrorMessage name=\"comune\" component=\"span\" className=\"errmsg\" />\r\n                                            </div>\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Cap</label>\r\n                                                <Field type=\"text\" name=\"cap\" className=\"form-control\" />\r\n                                            </div>\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Provincia</label>\r\n                                                <Field as=\"select\" name=\"prov\" className=\"form-control\" >\r\n                                                    <option value=\"\">Seleziona...</option>\r\n                                                    <option value=\"SS\">Sassari...</option>\r\n                                                    <option value=\"CA\">Cagliari...</option>\r\n                                                    <option value=\"NU\">Nuoro...</option>\r\n                                                    <option value=\"BZ\">Bolzano...</option>\r\n                                                    <option value=\"TN\">Trento...</option>\r\n                                                </Field>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Telefono</label>\r\n                                                <Field type=\"text\" name=\"telefono\" className=\"form-control\" />\r\n                                                <ErrorMessage name=\"telefono\" component=\"span\" className=\"errmsg\" />\r\n                                            </div>\r\n                                            <div className=\"col form-group\">\r\n                                                <label>Mail</label>\r\n                                                <Field type=\"text\" name=\"mail\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-row\">\r\n                                            <label className=\"custom-control custom-checkbox\">\r\n                                                <Field type=\"checkbox\" name=\"attivo\" className=\"custom-control-input\" />\r\n                                                <div className=\"custom-control-label\">Attivo</div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary inscli\">Salva</button>\r\n                                            <button type=\"button\" onClick={this.Annulla} className=\"btn btn-warning inscli\">Annulla</button>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n\r\n                                )\r\n\r\n                            }\r\n\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport './HeaderComponent.css';\r\nimport {withRouter} from \"react-router\";\r\nimport AuthenticationService from \"../Services/authService.js\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Header e navbar del progetto\r\nclass HeaderComponent extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"HeaderComponent\">\r\n                <Menu />\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n            <Link rel=\"nofollow noopener\" target=\"_blank\" className=\"navbar-brand\" to=\"/\" >\r\n                <img src={`../logo.png`} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" /> Problems Solving\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/\" >Home <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">                        \r\n                        <Link className=\"nav-link\" to=\"/clienti\" >Clienti</Link>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Dropdown\r\n                            </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n                    </li>\r\n                </ul>\r\n                <Search />\r\n                <User />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst Search = () => {\r\n    return (\r\n        <div className=\"searchDiv\">\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst User = () => {\r\n    return (\r\n        <ul className=\"navbar-nav nav-flex-icons\">\r\n            <li style={{ margin: 'auto' }} className=\"nav-item\">\r\n                <a className=\"nav-link\">1\r\n                    <i className=\"fa fa-envelope\"></i>\r\n                </a>\r\n            </li>\r\n            <li className=\"nav-item avatar dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink-55\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <img style={{ width: '50px' }} src={`../logo.png`} className=\"rounded-circle z-depth-0\"\r\n                        alt=\"avatar image\" />\r\n                </a>\r\n                <UserInfo/>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst UserInfo = () => {\r\n    if(AuthenticationService.isLogged()){\r\n        return(\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-lg-right dropdown-secondary\" aria-labelledby=\"navbarDropdownMenuLink-55\">\r\n                    <p>Benvenuto {AuthenticationService.getUSerInfo()}</p>\r\n                    <Link  className=\"dropdown-item\" to=\"/logout\" >Logout</Link>\r\n            </div>\r\n\r\n        );\r\n    }else{\r\n        return(\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-lg-right dropdown-secondary\" aria-labelledby=\"navbarDropdownMenuLink-55\">\r\n                    <Link  className=\"dropdown-item\" to=\"/login\" >Login</Link>\r\n                    <Link  className=\"dropdown-item\" to=\"/registrati\" >Registrati</Link>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport './FooterComponent.css';\r\n\r\n//Footer del progetto\r\nexport default class FooterComponent extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"FooterComponent\">\r\n                <Footer />\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\r\n\r\n            <div className=\"container text-center text-md-left\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4 mx-auto\">\r\n\r\n                        <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\r\n                        <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                        consectetur\r\n          adipisicing elit.</p>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto\">\r\n\r\n                        <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Link 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 4</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto\">\r\n\r\n                        <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Link 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 4</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto\">\r\n\r\n                        <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <a href=\"#!\">Link 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 3</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#!\">Link 4</a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <ul className=\"list-unstyled list-inline text-center py-2\">\r\n                <li className=\"list-inline-item\">\r\n                    <h5 className=\"mb-1\">Register for free</h5>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                    <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <hr />\r\n\r\n            <ul className=\"list-unstyled list-inline text-center\">\r\n                <li className=\"list-inline-item\">\r\n                    <a className=\"btn-floating btn-fb mx-1\">\r\n                        <i className=\"fa fa-facebook-f\"> </i>\r\n                    </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                    <a className=\"btn-floating btn-tw mx-1\">\r\n                        <i className=\"fa fa-twitter\"> </i>\r\n                    </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                    <a className=\"btn-floating btn-dribbble mx-1\">\r\n                        <i className=\"fa fa-dribbble\"> </i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n    <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a>\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport './ForbComponent.css'\r\n\r\n//Questa è la classe per la pagina forbidden che viene chiamata quando si cerca di accedere ad una pagina che richiede un ruolo che l'utente non possiede\r\nexport default class ForbComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"gandalf\">\r\n                    <div className=\"fireball\"></div>\r\n                    <div className=\"skirt\"></div>\r\n                    <div className=\"sleeves\"></div>\r\n                    <div className=\"shoulders\">\r\n                        <div className=\"hand left\"></div>\r\n                        <div className=\"hand right\"></div>\r\n                    </div>\r\n                    <div className=\"head\">\r\n                        <div className=\"hair\"></div>\r\n                        <div className=\"beard\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"message\">\r\n                    <h1>403 - You Shall Not Pass</h1>\r\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\r\n                </div>\r\n                <Link className=\"btn btn-danger\" to=\"/login\">Login</Link>\r\n                <Link className=\"btn btn-info\" to=\"/clienti\">Clienti</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport LoginComponent from './Login/LoginComponent'\r\nimport LogoutComponent from './Logout/LogoutComponent'\r\nimport WelcomeComponent from \"./Welcome/Welcome\"\r\nimport Clienti from \"./Clienti/Clienti\"\r\nimport DatiClienteComponent from \"./Clienti/InsClienti/DatiCliente\"\r\nimport HeaderComponent from \"./Header/HeaderComponent\"\r\nimport FooterComponent from \"./Footer/FooterComponent\"\r\nimport AuthRoute from \"./AuthRoute\";\r\nimport ForbComponent from \"./Forbidden/ForbComponent\"\r\n\r\n//Componente principale del progetto.\r\nexport default class GestFidApp extends Component {\r\n\r\n    //State pe salvare i diversi tipi di ruoli\r\n    state = {\r\n        User: \"ROLE_USER\",\r\n        Admin: 'ROLE_ADMIN'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            //Il router permette di attribuire un path ad una pagina e di limitarne l'accesso in base al ruolo\r\n            //In base alla posizione che voglio che abbiano, chiamo anche i componenti di header e di footer\r\n            <div className=\"GestFidApp\">\r\n                <Router>\r\n                    <HeaderComponent />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={LoginComponent} />\r\n                        <Route path=\"/login\" component={LoginComponent} />\r\n                        <Route path=\"/logout\" component={LogoutComponent} />\r\n                        <AuthRoute path=\"/welcome/:userId\" component={WelcomeComponent} role={this.state.User} />\r\n                        <AuthRoute path=\"/inscliente/:codfid\" component={DatiClienteComponent} role={this.state.Admin} />\r\n                        <AuthRoute path=\"/clienti\" component={Clienti} role={this.state.User} />\r\n                        <Route path=\"/forbidden\" component={ForbComponent} />\r\n\r\n                        <Route exact path=\"/404\" component={NotFound} />\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n                    <FooterComponent />\r\n                </Router>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst NotFound = () => {\r\n    return <h1>I am Lost</h1>;\r\n};\r\nconst Unauthorized = () => {\r\n    return <h1>I can't do that</h1>;\r\n};\r\n\r\nfunction ErrorComponent() {\r\n    return <div>Errore. Pagina non trovata!</div>\r\n}\r\n\r\nfunction NotFoundPage() {\r\n    return <div>Errore. Pagina non trovata!</div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport GestFidApp from './Componenti/GestFid/GestFidApp';\r\n\r\n//Funzione essenziale che carica il componente principale GestFidApp\r\nfunction App() {\r\n    return (\r\n\r\n        <div className = \"App\" >\r\n\r\n            <GestFidApp></GestFidApp>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Questa è la base assoluto della parte frontend del progetto.\r\n//Viene renderizzato nell'elemento root (creato in index.html in public) il contenuto della funziona App.js\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}